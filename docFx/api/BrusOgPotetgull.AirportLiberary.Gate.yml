### YamlMime:ManagedReference
items:
- uid: BrusOgPotetgull.AirportLiberary.Gate
  commentId: T:BrusOgPotetgull.AirportLiberary.Gate
  id: Gate
  parent: BrusOgPotetgull.AirportLiberary
  children:
  - BrusOgPotetgull.AirportLiberary.Gate.#ctor(System.String,BrusOgPotetgull.AirportLiberary.Airport)
  - BrusOgPotetgull.AirportLiberary.Gate.AddAircraftAllowedAtGate(BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType)
  - BrusOgPotetgull.AirportLiberary.Gate.AddMultipleAircraftAllowedAtGate(System.Collections.Generic.List{BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType})
  - BrusOgPotetgull.AirportLiberary.Gate.BookGate(BrusOgPotetgull.AirportLiberary.Aircraft,System.DateTime)
  - BrusOgPotetgull.AirportLiberary.Gate.CheckAircraftAllowedAtGate(BrusOgPotetgull.AirportLiberary.Aircraft)
  - BrusOgPotetgull.AirportLiberary.Gate.Id
  - BrusOgPotetgull.AirportLiberary.Gate.IsAvailable
  - BrusOgPotetgull.AirportLiberary.Gate.LeaveGate(BrusOgPotetgull.AirportLiberary.Aircraft,System.DateTime)
  - BrusOgPotetgull.AirportLiberary.Gate.MakeAllAircraftTypesAllowedForThisGate
  - BrusOgPotetgull.AirportLiberary.Gate.Name
  - BrusOgPotetgull.AirportLiberary.Gate.PrintGateInformation
  - BrusOgPotetgull.AirportLiberary.Gate.RemoveAircraftAllowedAtGate(BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType)
  - BrusOgPotetgull.AirportLiberary.Gate.ToString
  - BrusOgPotetgull.AirportLiberary.Gate.UpdateLocation(System.String)
  langs:
  - csharp
  - vb
  name: Gate
  nameWithType: Gate
  fullName: BrusOgPotetgull.AirportLiberary.Gate
  type: Class
  source:
    remote:
      path: brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
      branch: main
      repo: https://github.com/fredrikkri/Rammeverk-og-.net-gruppeoppgave.git
    id: Gate
    path: ../brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
    startLine: 9
  assemblies:
  - brusOgPotetgull.airportLiberary
  namespace: BrusOgPotetgull.AirportLiberary
  summary: >-
    The gate class is used to define how a gate is designed.

    It holds fields for the status of the gate and allowed aircraft types.
  example: []
  syntax:
    content: public class Gate
    content.vb: Public Class Gate
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: BrusOgPotetgull.AirportLiberary.Gate.#ctor(System.String,BrusOgPotetgull.AirportLiberary.Airport)
  commentId: M:BrusOgPotetgull.AirportLiberary.Gate.#ctor(System.String,BrusOgPotetgull.AirportLiberary.Airport)
  id: '#ctor(System.String,BrusOgPotetgull.AirportLiberary.Airport)'
  parent: BrusOgPotetgull.AirportLiberary.Gate
  langs:
  - csharp
  - vb
  name: Gate(string, Airport)
  nameWithType: Gate.Gate(string, Airport)
  fullName: BrusOgPotetgull.AirportLiberary.Gate.Gate(string, BrusOgPotetgull.AirportLiberary.Airport)
  type: Constructor
  source:
    remote:
      path: brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
      branch: main
      repo: https://github.com/fredrikkri/Rammeverk-og-.net-gruppeoppgave.git
    id: .ctor
    path: ../brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
    startLine: 23
  assemblies:
  - brusOgPotetgull.airportLiberary
  namespace: BrusOgPotetgull.AirportLiberary
  summary: Creates a gate.
  example: []
  syntax:
    content: public Gate(string name, Airport airport)
    parameters:
    - id: name
      type: System.String
      description: string of gate name
    - id: airport
      type: BrusOgPotetgull.AirportLiberary.Airport
      description: Airport object
    content.vb: Public Sub New(name As String, airport As Airport)
  overload: BrusOgPotetgull.AirportLiberary.Gate.#ctor*
  nameWithType.vb: Gate.New(String, Airport)
  fullName.vb: BrusOgPotetgull.AirportLiberary.Gate.New(String, BrusOgPotetgull.AirportLiberary.Airport)
  name.vb: New(String, Airport)
- uid: BrusOgPotetgull.AirportLiberary.Gate.Id
  commentId: P:BrusOgPotetgull.AirportLiberary.Gate.Id
  id: Id
  parent: BrusOgPotetgull.AirportLiberary.Gate
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Gate.Id
  fullName: BrusOgPotetgull.AirportLiberary.Gate.Id
  type: Property
  source:
    remote:
      path: brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
      branch: main
      repo: https://github.com/fredrikkri/Rammeverk-og-.net-gruppeoppgave.git
    id: Id
    path: ../brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
    startLine: 42
  assemblies:
  - brusOgPotetgull.airportLiberary
  namespace: BrusOgPotetgull.AirportLiberary
  summary: Gets Id of gate
  example: []
  syntax:
    content: public int Id { get; }
    parameters: []
    return:
      type: System.Int32
      description: int of gate id
    content.vb: Public Property Id As Integer
  overload: BrusOgPotetgull.AirportLiberary.Gate.Id*
- uid: BrusOgPotetgull.AirportLiberary.Gate.Name
  commentId: P:BrusOgPotetgull.AirportLiberary.Gate.Name
  id: Name
  parent: BrusOgPotetgull.AirportLiberary.Gate
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Gate.Name
  fullName: BrusOgPotetgull.AirportLiberary.Gate.Name
  type: Property
  source:
    remote:
      path: brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
      branch: main
      repo: https://github.com/fredrikkri/Rammeverk-og-.net-gruppeoppgave.git
    id: Name
    path: ../brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
    startLine: 50
  assemblies:
  - brusOgPotetgull.airportLiberary
  namespace: BrusOgPotetgull.AirportLiberary
  summary: gets gate name
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
      description: string of gate name
    content.vb: Public Property Name As String
  overload: BrusOgPotetgull.AirportLiberary.Gate.Name*
- uid: BrusOgPotetgull.AirportLiberary.Gate.IsAvailable
  commentId: P:BrusOgPotetgull.AirportLiberary.Gate.IsAvailable
  id: IsAvailable
  parent: BrusOgPotetgull.AirportLiberary.Gate
  langs:
  - csharp
  - vb
  name: IsAvailable
  nameWithType: Gate.IsAvailable
  fullName: BrusOgPotetgull.AirportLiberary.Gate.IsAvailable
  type: Property
  source:
    remote:
      path: brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
      branch: main
      repo: https://github.com/fredrikkri/Rammeverk-og-.net-gruppeoppgave.git
    id: IsAvailable
    path: ../brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
    startLine: 58
  assemblies:
  - brusOgPotetgull.airportLiberary
  namespace: BrusOgPotetgull.AirportLiberary
  summary: Gets if gate is available with bool
  example: []
  syntax:
    content: public bool IsAvailable { get; }
    parameters: []
    return:
      type: System.Boolean
      description: bool of if gate is available
    content.vb: Public Property IsAvailable As Boolean
  overload: BrusOgPotetgull.AirportLiberary.Gate.IsAvailable*
- uid: BrusOgPotetgull.AirportLiberary.Gate.UpdateLocation(System.String)
  commentId: M:BrusOgPotetgull.AirportLiberary.Gate.UpdateLocation(System.String)
  id: UpdateLocation(System.String)
  parent: BrusOgPotetgull.AirportLiberary.Gate
  langs:
  - csharp
  - vb
  name: UpdateLocation(string)
  nameWithType: Gate.UpdateLocation(string)
  fullName: BrusOgPotetgull.AirportLiberary.Gate.UpdateLocation(string)
  type: Method
  source:
    remote:
      path: brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
      branch: main
      repo: https://github.com/fredrikkri/Rammeverk-og-.net-gruppeoppgave.git
    id: UpdateLocation
    path: ../brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
    startLine: 64
  assemblies:
  - brusOgPotetgull.airportLiberary
  namespace: BrusOgPotetgull.AirportLiberary
  summary: Updates the airport the gate is located at.
  example: []
  syntax:
    content: public void UpdateLocation(string airportName)
    parameters:
    - id: airportName
      type: System.String
      description: Name of the airport that the gate will be updated to.
    content.vb: Public Sub UpdateLocation(airportName As String)
  overload: BrusOgPotetgull.AirportLiberary.Gate.UpdateLocation*
  nameWithType.vb: Gate.UpdateLocation(String)
  fullName.vb: BrusOgPotetgull.AirportLiberary.Gate.UpdateLocation(String)
  name.vb: UpdateLocation(String)
- uid: BrusOgPotetgull.AirportLiberary.Gate.PrintGateInformation
  commentId: M:BrusOgPotetgull.AirportLiberary.Gate.PrintGateInformation
  id: PrintGateInformation
  parent: BrusOgPotetgull.AirportLiberary.Gate
  langs:
  - csharp
  - vb
  name: PrintGateInformation()
  nameWithType: Gate.PrintGateInformation()
  fullName: BrusOgPotetgull.AirportLiberary.Gate.PrintGateInformation()
  type: Method
  source:
    remote:
      path: brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
      branch: main
      repo: https://github.com/fredrikkri/Rammeverk-og-.net-gruppeoppgave.git
    id: PrintGateInformation
    path: ../brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
    startLine: 72
  assemblies:
  - brusOgPotetgull.airportLiberary
  namespace: BrusOgPotetgull.AirportLiberary
  summary: Prints out the information about the gate.
  example: []
  syntax:
    content: public void PrintGateInformation()
    content.vb: Public Sub PrintGateInformation()
  overload: BrusOgPotetgull.AirportLiberary.Gate.PrintGateInformation*
- uid: BrusOgPotetgull.AirportLiberary.Gate.ToString
  commentId: M:BrusOgPotetgull.AirportLiberary.Gate.ToString
  id: ToString
  parent: BrusOgPotetgull.AirportLiberary.Gate
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Gate.ToString()
  fullName: BrusOgPotetgull.AirportLiberary.Gate.ToString()
  type: Method
  source:
    remote:
      path: brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
      branch: main
      repo: https://github.com/fredrikkri/Rammeverk-og-.net-gruppeoppgave.git
    id: ToString
    path: ../brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
    startLine: 88
  assemblies:
  - brusOgPotetgull.airportLiberary
  namespace: BrusOgPotetgull.AirportLiberary
  summary: This override the ToString() method that exists in all objects in c#
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A String with simple details about the Gate.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: BrusOgPotetgull.AirportLiberary.Gate.ToString*
- uid: BrusOgPotetgull.AirportLiberary.Gate.AddAircraftAllowedAtGate(BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType)
  commentId: M:BrusOgPotetgull.AirportLiberary.Gate.AddAircraftAllowedAtGate(BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType)
  id: AddAircraftAllowedAtGate(BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType)
  parent: BrusOgPotetgull.AirportLiberary.Gate
  langs:
  - csharp
  - vb
  name: AddAircraftAllowedAtGate(AircraftType)
  nameWithType: Gate.AddAircraftAllowedAtGate(AircraftType)
  fullName: BrusOgPotetgull.AirportLiberary.Gate.AddAircraftAllowedAtGate(BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType)
  type: Method
  source:
    remote:
      path: brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
      branch: main
      repo: https://github.com/fredrikkri/Rammeverk-og-.net-gruppeoppgave.git
    id: AddAircraftAllowedAtGate
    path: ../brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
    startLine: 104
  assemblies:
  - brusOgPotetgull.airportLiberary
  namespace: BrusOgPotetgull.AirportLiberary
  summary: Adds an aircraft that will be able to use the gate.
  example: []
  syntax:
    content: public void AddAircraftAllowedAtGate(AircraftType aircraftType)
    parameters:
    - id: aircraftType
      type: BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType
      description: An Enum that represents the id of an aircraftType that you want to enable accsess for the gate.
    content.vb: Public Sub AddAircraftAllowedAtGate(aircraftType As AircraftType)
  overload: BrusOgPotetgull.AirportLiberary.Gate.AddAircraftAllowedAtGate*
- uid: BrusOgPotetgull.AirportLiberary.Gate.AddMultipleAircraftAllowedAtGate(System.Collections.Generic.List{BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType})
  commentId: M:BrusOgPotetgull.AirportLiberary.Gate.AddMultipleAircraftAllowedAtGate(System.Collections.Generic.List{BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType})
  id: AddMultipleAircraftAllowedAtGate(System.Collections.Generic.List{BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType})
  parent: BrusOgPotetgull.AirportLiberary.Gate
  langs:
  - csharp
  - vb
  name: AddMultipleAircraftAllowedAtGate(List<AircraftType>)
  nameWithType: Gate.AddMultipleAircraftAllowedAtGate(List<AircraftType>)
  fullName: BrusOgPotetgull.AirportLiberary.Gate.AddMultipleAircraftAllowedAtGate(System.Collections.Generic.List<BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType>)
  type: Method
  source:
    remote:
      path: brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
      branch: main
      repo: https://github.com/fredrikkri/Rammeverk-og-.net-gruppeoppgave.git
    id: AddMultipleAircraftAllowedAtGate
    path: ../brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
    startLine: 113
  assemblies:
  - brusOgPotetgull.airportLiberary
  namespace: BrusOgPotetgull.AirportLiberary
  summary: Adds multiple aircrafts that will be granted access to use the gate.
  example: []
  syntax:
    content: public void AddMultipleAircraftAllowedAtGate(List<AircraftType> aircraftTypeIds)
    parameters:
    - id: aircraftTypeIds
      type: System.Collections.Generic.List{BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType}
      description: A list of ids of aircrafts that you want to enable accsess for the gate
    content.vb: Public Sub AddMultipleAircraftAllowedAtGate(aircraftTypeIds As List(Of AircraftType))
  overload: BrusOgPotetgull.AirportLiberary.Gate.AddMultipleAircraftAllowedAtGate*
  nameWithType.vb: Gate.AddMultipleAircraftAllowedAtGate(List(Of AircraftType))
  fullName.vb: BrusOgPotetgull.AirportLiberary.Gate.AddMultipleAircraftAllowedAtGate(System.Collections.Generic.List(Of BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType))
  name.vb: AddMultipleAircraftAllowedAtGate(List(Of AircraftType))
- uid: BrusOgPotetgull.AirportLiberary.Gate.MakeAllAircraftTypesAllowedForThisGate
  commentId: M:BrusOgPotetgull.AirportLiberary.Gate.MakeAllAircraftTypesAllowedForThisGate
  id: MakeAllAircraftTypesAllowedForThisGate
  parent: BrusOgPotetgull.AirportLiberary.Gate
  langs:
  - csharp
  - vb
  name: MakeAllAircraftTypesAllowedForThisGate()
  nameWithType: Gate.MakeAllAircraftTypesAllowedForThisGate()
  fullName: BrusOgPotetgull.AirportLiberary.Gate.MakeAllAircraftTypesAllowedForThisGate()
  type: Method
  source:
    remote:
      path: brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
      branch: main
      repo: https://github.com/fredrikkri/Rammeverk-og-.net-gruppeoppgave.git
    id: MakeAllAircraftTypesAllowedForThisGate
    path: ../brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
    startLine: 126
  assemblies:
  - brusOgPotetgull.airportLiberary
  namespace: BrusOgPotetgull.AirportLiberary
  summary: Grants all of the existing aircrafttypes access to use the gate.
  example: []
  syntax:
    content: public void MakeAllAircraftTypesAllowedForThisGate()
    content.vb: Public Sub MakeAllAircraftTypesAllowedForThisGate()
  overload: BrusOgPotetgull.AirportLiberary.Gate.MakeAllAircraftTypesAllowedForThisGate*
- uid: BrusOgPotetgull.AirportLiberary.Gate.RemoveAircraftAllowedAtGate(BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType)
  commentId: M:BrusOgPotetgull.AirportLiberary.Gate.RemoveAircraftAllowedAtGate(BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType)
  id: RemoveAircraftAllowedAtGate(BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType)
  parent: BrusOgPotetgull.AirportLiberary.Gate
  langs:
  - csharp
  - vb
  name: RemoveAircraftAllowedAtGate(AircraftType)
  nameWithType: Gate.RemoveAircraftAllowedAtGate(AircraftType)
  fullName: BrusOgPotetgull.AirportLiberary.Gate.RemoveAircraftAllowedAtGate(BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType)
  type: Method
  source:
    remote:
      path: brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
      branch: main
      repo: https://github.com/fredrikkri/Rammeverk-og-.net-gruppeoppgave.git
    id: RemoveAircraftAllowedAtGate
    path: ../brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
    startLine: 139
  assemblies:
  - brusOgPotetgull.airportLiberary
  namespace: BrusOgPotetgull.AirportLiberary
  summary: Removes an aircraft from being able to use the gate.
  example: []
  syntax:
    content: public void RemoveAircraftAllowedAtGate(AircraftType aircraftTypeId)
    parameters:
    - id: aircraftTypeId
      type: BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType
      description: The id of an type of aircraft that you want to deny accsess to the gate.
    content.vb: Public Sub RemoveAircraftAllowedAtGate(aircraftTypeId As AircraftType)
  overload: BrusOgPotetgull.AirportLiberary.Gate.RemoveAircraftAllowedAtGate*
- uid: BrusOgPotetgull.AirportLiberary.Gate.CheckAircraftAllowedAtGate(BrusOgPotetgull.AirportLiberary.Aircraft)
  commentId: M:BrusOgPotetgull.AirportLiberary.Gate.CheckAircraftAllowedAtGate(BrusOgPotetgull.AirportLiberary.Aircraft)
  id: CheckAircraftAllowedAtGate(BrusOgPotetgull.AirportLiberary.Aircraft)
  parent: BrusOgPotetgull.AirportLiberary.Gate
  langs:
  - csharp
  - vb
  name: CheckAircraftAllowedAtGate(Aircraft)
  nameWithType: Gate.CheckAircraftAllowedAtGate(Aircraft)
  fullName: BrusOgPotetgull.AirportLiberary.Gate.CheckAircraftAllowedAtGate(BrusOgPotetgull.AirportLiberary.Aircraft)
  type: Method
  source:
    remote:
      path: brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
      branch: main
      repo: https://github.com/fredrikkri/Rammeverk-og-.net-gruppeoppgave.git
    id: CheckAircraftAllowedAtGate
    path: ../brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
    startLine: 151
  assemblies:
  - brusOgPotetgull.airportLiberary
  namespace: BrusOgPotetgull.AirportLiberary
  summary: Checks if an aircraft can use the gate.
  example: []
  syntax:
    content: public bool CheckAircraftAllowedAtGate(Aircraft aircraft)
    parameters:
    - id: aircraft
      type: BrusOgPotetgull.AirportLiberary.Aircraft
      description: The aircraft you want to check if it has access or not.
    return:
      type: System.Boolean
      description: "'true' if it has access or 'false' if it does not."
    content.vb: Public Function CheckAircraftAllowedAtGate(aircraft As Aircraft) As Boolean
  overload: BrusOgPotetgull.AirportLiberary.Gate.CheckAircraftAllowedAtGate*
- uid: BrusOgPotetgull.AirportLiberary.Gate.LeaveGate(BrusOgPotetgull.AirportLiberary.Aircraft,System.DateTime)
  commentId: M:BrusOgPotetgull.AirportLiberary.Gate.LeaveGate(BrusOgPotetgull.AirportLiberary.Aircraft,System.DateTime)
  id: LeaveGate(BrusOgPotetgull.AirportLiberary.Aircraft,System.DateTime)
  parent: BrusOgPotetgull.AirportLiberary.Gate
  langs:
  - csharp
  - vb
  name: LeaveGate(Aircraft, DateTime)
  nameWithType: Gate.LeaveGate(Aircraft, DateTime)
  fullName: BrusOgPotetgull.AirportLiberary.Gate.LeaveGate(BrusOgPotetgull.AirportLiberary.Aircraft, System.DateTime)
  type: Method
  source:
    remote:
      path: brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
      branch: main
      repo: https://github.com/fredrikkri/Rammeverk-og-.net-gruppeoppgave.git
    id: LeaveGate
    path: ../brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
    startLine: 166
  assemblies:
  - brusOgPotetgull.airportLiberary
  namespace: BrusOgPotetgull.AirportLiberary
  summary: >-
    An aircraft leaves the gate.

    And saves it in the aircrafthistory for the aircraft.

    The gate is now avalible for other aircrafts.
  example: []
  syntax:
    content: public void LeaveGate(Aircraft aircraft, DateTime time)
    parameters:
    - id: aircraft
      type: BrusOgPotetgull.AirportLiberary.Aircraft
      description: The aircraft that is going to leave the gate.
    - id: time
      type: System.DateTime
      description: Used to log the history for the aircraft.
    content.vb: Public Sub LeaveGate(aircraft As Aircraft, time As Date)
  overload: BrusOgPotetgull.AirportLiberary.Gate.LeaveGate*
  nameWithType.vb: Gate.LeaveGate(Aircraft, Date)
  fullName.vb: BrusOgPotetgull.AirportLiberary.Gate.LeaveGate(BrusOgPotetgull.AirportLiberary.Aircraft, Date)
  name.vb: LeaveGate(Aircraft, Date)
- uid: BrusOgPotetgull.AirportLiberary.Gate.BookGate(BrusOgPotetgull.AirportLiberary.Aircraft,System.DateTime)
  commentId: M:BrusOgPotetgull.AirportLiberary.Gate.BookGate(BrusOgPotetgull.AirportLiberary.Aircraft,System.DateTime)
  id: BookGate(BrusOgPotetgull.AirportLiberary.Aircraft,System.DateTime)
  parent: BrusOgPotetgull.AirportLiberary.Gate
  langs:
  - csharp
  - vb
  name: BookGate(Aircraft, DateTime)
  nameWithType: Gate.BookGate(Aircraft, DateTime)
  fullName: BrusOgPotetgull.AirportLiberary.Gate.BookGate(BrusOgPotetgull.AirportLiberary.Aircraft, System.DateTime)
  type: Method
  source:
    remote:
      path: brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
      branch: main
      repo: https://github.com/fredrikkri/Rammeverk-og-.net-gruppeoppgave.git
    id: BookGate
    path: ../brusOgPotetgull.airportLiberary/AirportComponents/Gate.cs
    startLine: 179
  assemblies:
  - brusOgPotetgull.airportLiberary
  namespace: BrusOgPotetgull.AirportLiberary
  summary: >-
    An aircraft occupies a gate.

    And saves it in aircrafthistory for the aircraft.

    The gate is now unavalible for other aircrafts to use it.
  example: []
  syntax:
    content: public void BookGate(Aircraft aircraft, DateTime time)
    parameters:
    - id: aircraft
      type: BrusOgPotetgull.AirportLiberary.Aircraft
      description: The aircraft that is going to book the gate.
    - id: time
      type: System.DateTime
      description: Used to log the history for the aircraft.
    content.vb: Public Sub BookGate(aircraft As Aircraft, time As Date)
  overload: BrusOgPotetgull.AirportLiberary.Gate.BookGate*
  nameWithType.vb: Gate.BookGate(Aircraft, Date)
  fullName.vb: BrusOgPotetgull.AirportLiberary.Gate.BookGate(BrusOgPotetgull.AirportLiberary.Aircraft, Date)
  name.vb: BookGate(Aircraft, Date)
references:
- uid: BrusOgPotetgull.AirportLiberary
  commentId: N:BrusOgPotetgull.AirportLiberary
  href: BrusOgPotetgull.html
  name: BrusOgPotetgull.AirportLiberary
  nameWithType: BrusOgPotetgull.AirportLiberary
  fullName: BrusOgPotetgull.AirportLiberary
  spec.csharp:
  - uid: BrusOgPotetgull
    name: BrusOgPotetgull
    href: BrusOgPotetgull.html
  - name: .
  - uid: BrusOgPotetgull.AirportLiberary
    name: AirportLiberary
    href: BrusOgPotetgull.AirportLiberary.html
  spec.vb:
  - uid: BrusOgPotetgull
    name: BrusOgPotetgull
    href: BrusOgPotetgull.html
  - name: .
  - uid: BrusOgPotetgull.AirportLiberary
    name: AirportLiberary
    href: BrusOgPotetgull.AirportLiberary.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: BrusOgPotetgull.AirportLiberary.Gate.#ctor*
  commentId: Overload:BrusOgPotetgull.AirportLiberary.Gate.#ctor
  href: BrusOgPotetgull.AirportLiberary.Gate.html#BrusOgPotetgull_AirportLiberary_Gate__ctor_System_String_BrusOgPotetgull_AirportLiberary_Airport_
  name: Gate
  nameWithType: Gate.Gate
  fullName: BrusOgPotetgull.AirportLiberary.Gate.Gate
  nameWithType.vb: Gate.New
  fullName.vb: BrusOgPotetgull.AirportLiberary.Gate.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: BrusOgPotetgull.AirportLiberary.Airport
  commentId: T:BrusOgPotetgull.AirportLiberary.Airport
  parent: BrusOgPotetgull.AirportLiberary
  href: BrusOgPotetgull.AirportLiberary.Airport.html
  name: Airport
  nameWithType: Airport
  fullName: BrusOgPotetgull.AirportLiberary.Airport
- uid: BrusOgPotetgull.AirportLiberary.Gate.Id*
  commentId: Overload:BrusOgPotetgull.AirportLiberary.Gate.Id
  href: BrusOgPotetgull.AirportLiberary.Gate.html#BrusOgPotetgull_AirportLiberary_Gate_Id
  name: Id
  nameWithType: Gate.Id
  fullName: BrusOgPotetgull.AirportLiberary.Gate.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: BrusOgPotetgull.AirportLiberary.Gate.Name*
  commentId: Overload:BrusOgPotetgull.AirportLiberary.Gate.Name
  href: BrusOgPotetgull.AirportLiberary.Gate.html#BrusOgPotetgull_AirportLiberary_Gate_Name
  name: Name
  nameWithType: Gate.Name
  fullName: BrusOgPotetgull.AirportLiberary.Gate.Name
- uid: BrusOgPotetgull.AirportLiberary.Gate.IsAvailable*
  commentId: Overload:BrusOgPotetgull.AirportLiberary.Gate.IsAvailable
  href: BrusOgPotetgull.AirportLiberary.Gate.html#BrusOgPotetgull_AirportLiberary_Gate_IsAvailable
  name: IsAvailable
  nameWithType: Gate.IsAvailable
  fullName: BrusOgPotetgull.AirportLiberary.Gate.IsAvailable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: BrusOgPotetgull.AirportLiberary.Gate.UpdateLocation*
  commentId: Overload:BrusOgPotetgull.AirportLiberary.Gate.UpdateLocation
  href: BrusOgPotetgull.AirportLiberary.Gate.html#BrusOgPotetgull_AirportLiberary_Gate_UpdateLocation_System_String_
  name: UpdateLocation
  nameWithType: Gate.UpdateLocation
  fullName: BrusOgPotetgull.AirportLiberary.Gate.UpdateLocation
- uid: BrusOgPotetgull.AirportLiberary.Gate.PrintGateInformation*
  commentId: Overload:BrusOgPotetgull.AirportLiberary.Gate.PrintGateInformation
  href: BrusOgPotetgull.AirportLiberary.Gate.html#BrusOgPotetgull_AirportLiberary_Gate_PrintGateInformation
  name: PrintGateInformation
  nameWithType: Gate.PrintGateInformation
  fullName: BrusOgPotetgull.AirportLiberary.Gate.PrintGateInformation
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: BrusOgPotetgull.AirportLiberary.Gate.ToString*
  commentId: Overload:BrusOgPotetgull.AirportLiberary.Gate.ToString
  href: BrusOgPotetgull.AirportLiberary.Gate.html#BrusOgPotetgull_AirportLiberary_Gate_ToString
  name: ToString
  nameWithType: Gate.ToString
  fullName: BrusOgPotetgull.AirportLiberary.Gate.ToString
- uid: BrusOgPotetgull.AirportLiberary.Gate.AddAircraftAllowedAtGate*
  commentId: Overload:BrusOgPotetgull.AirportLiberary.Gate.AddAircraftAllowedAtGate
  href: BrusOgPotetgull.AirportLiberary.Gate.html#BrusOgPotetgull_AirportLiberary_Gate_AddAircraftAllowedAtGate_BrusOgPotetgull_AirportLiberary_AircraftTypes_AircraftType_
  name: AddAircraftAllowedAtGate
  nameWithType: Gate.AddAircraftAllowedAtGate
  fullName: BrusOgPotetgull.AirportLiberary.Gate.AddAircraftAllowedAtGate
- uid: BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType
  commentId: T:BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType
  parent: BrusOgPotetgull.AirportLiberary.AircraftTypes
  href: BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType.html
  name: AircraftType
  nameWithType: AircraftType
  fullName: BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType
- uid: BrusOgPotetgull.AirportLiberary.AircraftTypes
  commentId: N:BrusOgPotetgull.AirportLiberary.AircraftTypes
  href: BrusOgPotetgull.html
  name: BrusOgPotetgull.AirportLiberary.AircraftTypes
  nameWithType: BrusOgPotetgull.AirportLiberary.AircraftTypes
  fullName: BrusOgPotetgull.AirportLiberary.AircraftTypes
  spec.csharp:
  - uid: BrusOgPotetgull
    name: BrusOgPotetgull
    href: BrusOgPotetgull.html
  - name: .
  - uid: BrusOgPotetgull.AirportLiberary
    name: AirportLiberary
    href: BrusOgPotetgull.AirportLiberary.html
  - name: .
  - uid: BrusOgPotetgull.AirportLiberary.AircraftTypes
    name: AircraftTypes
    href: BrusOgPotetgull.AirportLiberary.AircraftTypes.html
  spec.vb:
  - uid: BrusOgPotetgull
    name: BrusOgPotetgull
    href: BrusOgPotetgull.html
  - name: .
  - uid: BrusOgPotetgull.AirportLiberary
    name: AirportLiberary
    href: BrusOgPotetgull.AirportLiberary.html
  - name: .
  - uid: BrusOgPotetgull.AirportLiberary.AircraftTypes
    name: AircraftTypes
    href: BrusOgPotetgull.AirportLiberary.AircraftTypes.html
- uid: BrusOgPotetgull.AirportLiberary.Gate.AddMultipleAircraftAllowedAtGate*
  commentId: Overload:BrusOgPotetgull.AirportLiberary.Gate.AddMultipleAircraftAllowedAtGate
  href: BrusOgPotetgull.AirportLiberary.Gate.html#BrusOgPotetgull_AirportLiberary_Gate_AddMultipleAircraftAllowedAtGate_System_Collections_Generic_List_BrusOgPotetgull_AirportLiberary_AircraftTypes_AircraftType__
  name: AddMultipleAircraftAllowedAtGate
  nameWithType: Gate.AddMultipleAircraftAllowedAtGate
  fullName: BrusOgPotetgull.AirportLiberary.Gate.AddMultipleAircraftAllowedAtGate
- uid: System.Collections.Generic.List{BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType}
  commentId: T:System.Collections.Generic.List{BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<AircraftType>
  nameWithType: List<AircraftType>
  fullName: System.Collections.Generic.List<BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType>
  nameWithType.vb: List(Of AircraftType)
  fullName.vb: System.Collections.Generic.List(Of BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType)
  name.vb: List(Of AircraftType)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType
    name: AircraftType
    href: BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType
    name: AircraftType
    href: BrusOgPotetgull.AirportLiberary.AircraftTypes.AircraftType.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: BrusOgPotetgull.AirportLiberary.Gate.MakeAllAircraftTypesAllowedForThisGate*
  commentId: Overload:BrusOgPotetgull.AirportLiberary.Gate.MakeAllAircraftTypesAllowedForThisGate
  href: BrusOgPotetgull.AirportLiberary.Gate.html#BrusOgPotetgull_AirportLiberary_Gate_MakeAllAircraftTypesAllowedForThisGate
  name: MakeAllAircraftTypesAllowedForThisGate
  nameWithType: Gate.MakeAllAircraftTypesAllowedForThisGate
  fullName: BrusOgPotetgull.AirportLiberary.Gate.MakeAllAircraftTypesAllowedForThisGate
- uid: BrusOgPotetgull.AirportLiberary.Gate.RemoveAircraftAllowedAtGate*
  commentId: Overload:BrusOgPotetgull.AirportLiberary.Gate.RemoveAircraftAllowedAtGate
  href: BrusOgPotetgull.AirportLiberary.Gate.html#BrusOgPotetgull_AirportLiberary_Gate_RemoveAircraftAllowedAtGate_BrusOgPotetgull_AirportLiberary_AircraftTypes_AircraftType_
  name: RemoveAircraftAllowedAtGate
  nameWithType: Gate.RemoveAircraftAllowedAtGate
  fullName: BrusOgPotetgull.AirportLiberary.Gate.RemoveAircraftAllowedAtGate
- uid: BrusOgPotetgull.AirportLiberary.Gate.CheckAircraftAllowedAtGate*
  commentId: Overload:BrusOgPotetgull.AirportLiberary.Gate.CheckAircraftAllowedAtGate
  href: BrusOgPotetgull.AirportLiberary.Gate.html#BrusOgPotetgull_AirportLiberary_Gate_CheckAircraftAllowedAtGate_BrusOgPotetgull_AirportLiberary_Aircraft_
  name: CheckAircraftAllowedAtGate
  nameWithType: Gate.CheckAircraftAllowedAtGate
  fullName: BrusOgPotetgull.AirportLiberary.Gate.CheckAircraftAllowedAtGate
- uid: BrusOgPotetgull.AirportLiberary.Aircraft
  commentId: T:BrusOgPotetgull.AirportLiberary.Aircraft
  parent: BrusOgPotetgull.AirportLiberary
  href: BrusOgPotetgull.AirportLiberary.Aircraft.html
  name: Aircraft
  nameWithType: Aircraft
  fullName: BrusOgPotetgull.AirportLiberary.Aircraft
- uid: BrusOgPotetgull.AirportLiberary.Gate.LeaveGate*
  commentId: Overload:BrusOgPotetgull.AirportLiberary.Gate.LeaveGate
  href: BrusOgPotetgull.AirportLiberary.Gate.html#BrusOgPotetgull_AirportLiberary_Gate_LeaveGate_BrusOgPotetgull_AirportLiberary_Aircraft_System_DateTime_
  name: LeaveGate
  nameWithType: Gate.LeaveGate
  fullName: BrusOgPotetgull.AirportLiberary.Gate.LeaveGate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: BrusOgPotetgull.AirportLiberary.Gate.BookGate*
  commentId: Overload:BrusOgPotetgull.AirportLiberary.Gate.BookGate
  href: BrusOgPotetgull.AirportLiberary.Gate.html#BrusOgPotetgull_AirportLiberary_Gate_BookGate_BrusOgPotetgull_AirportLiberary_Aircraft_System_DateTime_
  name: BookGate
  nameWithType: Gate.BookGate
  fullName: BrusOgPotetgull.AirportLiberary.Gate.BookGate
